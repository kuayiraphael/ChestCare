# Generated by Django 5.2 on 2025-04-12 21:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='disease name')),
                ('type', models.CharField(choices=[('cardiomegaly', 'Cardiomegaly'), ('pneumonia', 'Pneumonia'), ('tuberculosis', 'Tuberculosis'), ('pulmonary', 'Pulmonary Hypertension')], max_length=50, verbose_name='disease type')),
                ('description', models.TextField(verbose_name='description')),
                ('causes', models.TextField(verbose_name='causes')),
                ('symptoms', models.TextField(verbose_name='symptoms')),
                ('treatment', models.TextField(verbose_name='treatment')),
                ('clinical_notes', models.TextField(verbose_name='clinical notes')),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(choices=[('diagnosed', 'Diagnosed'), ('undiagnosed', 'Undiagnosed'), ('recovered', 'Recovered'), ('deceased', 'Deceased')], default='undiagnosed', max_length=20)),
                ('diabetes', models.BooleanField(default=False)),
                ('hypertension', models.BooleanField(default=False)),
                ('asthma', models.BooleanField(default=False)),
                ('allergies', models.BooleanField(default=False)),
                ('heart_disease', models.BooleanField(default=False)),
                ('stroke', models.BooleanField(default=False)),
                ('cancer', models.BooleanField(default=False)),
                ('depression', models.BooleanField(default=False)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(45)])),
                ('heart_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('oxygen_saturation', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('smoking_status', models.CharField(blank=True, max_length=100)),
                ('family_history', models.TextField(blank=True)),
                ('surgical_history', models.TextField(blank=True)),
                ('prior_tb_exposure', models.BooleanField(default=False)),
                ('previous_cardiac_conditions', models.BooleanField(default=False)),
                ('blood_glucose', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cholesterol', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hba1c', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('white_blood_cell_count', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('c_reactive_protein', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bnp', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('additional_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty', models.CharField(blank=True, max_length=100, null=True, verbose_name='specialty')),
                ('hospital', models.CharField(blank=True, max_length=150, null=True, verbose_name='hospital')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='years of experience')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='bio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
        ),
        migrations.CreateModel(
            name='DiseaseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_date', models.DateField(verbose_name='diagnosis date')),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], max_length=50, verbose_name='severity')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('status', models.CharField(choices=[('active', 'Active'), ('recovered', 'Recovered'), ('worsened', 'Worsened'), ('deceased', 'Deceased')], default='active', max_length=50, verbose_name='status')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='dashboard.disease')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handled_cases', to='dashboard.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_cases', to='dashboard.patient')),
            ],
            options={
                'verbose_name': 'Disease Case',
                'verbose_name_plural': 'Disease Cases',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='appointment date')),
                ('time', models.TimeField(verbose_name='appointment time')),
                ('appointment_type', models.CharField(choices=[('initial', 'Initial Consultation'), ('followup', 'Follow-up'), ('checkup', 'Regular Checkup'), ('emergency', 'Emergency')], max_length=100, verbose_name='appointment type')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=50, verbose_name='status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('disease_case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='dashboard.diseasecase')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='dashboard.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='dashboard.patient')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='symptom name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('related_diseases', models.ManyToManyField(blank=True, related_name='related_symptoms', to='dashboard.disease')),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
            },
        ),
        migrations.CreateModel(
            name='PatientSymptomRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], default='moderate', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('recorded_date', models.DateField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptom_records', to='dashboard.patient')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_records', to='dashboard.symptom')),
            ],
            options={
                'verbose_name': 'Patient Symptom Record',
                'verbose_name_plural': 'Patient Symptom Records',
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='symptoms',
            field=models.ManyToManyField(blank=True, related_name='patients', to='dashboard.symptom'),
        ),
        migrations.CreateModel(
            name='DiseaseStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(verbose_name='month')),
                ('year', models.PositiveIntegerField(verbose_name='year')),
                ('case_count', models.PositiveIntegerField(verbose_name='case count')),
                ('percent_change', models.FloatField(default=0.0, verbose_name='percent change')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='dashboard.disease')),
            ],
            options={
                'verbose_name': 'Disease Statistic',
                'verbose_name_plural': 'Disease Statistics',
                'unique_together': {('disease', 'month', 'year')},
            },
        ),
    ]
